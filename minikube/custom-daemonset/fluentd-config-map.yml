# fluentd-config-map.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluent.conf: |
    <match fluent.**>
        # this tells fluentd to not output its log on stdout
        @type null
    </match>

    <match kubernetes.var.log.containers.**fluentd**.log>
      @type null
    </match>

    <match kubernetes.var.log.containers.**kube-system**.log>
      @type null
    </match>

    # here we read the logs from Docker's containers and parse them
    <source>
      @type tail
      path /var/log/containers/*.log
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      tag kubernetes.*
      format json
      read_from_head true
    </source>

    <source>
      @type tail
      path /var/log/containers/*.log
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      tag kubernetesmet.*
      format json
      read_from_head true
    </source>

    #<filter **>
    #  @type grep
    #  <regexp>
    #    key log
    #    pattern ^[0-9]{2}-[A-Z][a-z]{2}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3} .+
    #  </regexp>
    #</filter>

    <filter kubernetesmet.**>
      @type grep
      <regexp>
        @type regexp
        key log
        pattern \W*\[CREW-METRIC\]\W*
      </regexp>
    </filter>

    <filter kubernetesmet.**>
      @type parser
      key_name log
      <parse>
        @type regexp
        expression .*\[CREW-METRIC\] - (?<metric>.*)
        types metric:string
      </parse>
    </filter>

    <filter kubernetesmet.**>
      @type parser
      key_name metric
      reserve_data true
      <parse>
        @type json
      </parse>
    </filter>

    # we use kubernetes metadata plugin to add metadatas to the log
    <filter kubernetes*.**>
      @type kubernetes_metadata
      merge_json_log true
      preserve_json_log true
    </filter>

    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
            kubernetes_namespace_container_name ${record["kubernetes"]["namespace_name"]}/${record["kubernetes"]["container_name"]}/${record["kubernetes"]["pod_name"]}
      </record>
    </filter>

    # Stdout
    #<match kubernetes.**>
    #    @type stdout
    #</match>

    # we send the logs to Elasticsearch
    <match kubernetes*.**>
        @type elasticsearch
        include_tag_key true
        host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
        port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
        scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
        ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
        user "#{ENV['FLUENT_ELASTICSEARCH_USER']}" # remove these lines if not needed
        password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}" # remove these lines if not needed
        reload_connections true
        logstash_prefix logstash
        logstash_format true
        <buffer>
            flush_thread_count 8
            flush_interval 5s
            chunk_limit_size 2M
            queue_limit_length 32
            retry_max_interval 30
            retry_forever true
        </buffer>
    </match>
